{"version":3,"file":"static/js/7.ba65fb4e.chunk.js","mappings":"4LAEaA,E,OAAeC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+L,SCCzBC,EAAS,WACpB,OACEC,EAAAA,EAAAA,KAACL,EAAY,CAAAM,UACXD,EAAAA,EAAAA,KAACE,EAAAA,GAAa,CACZC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,MAAM,OACNC,YAAY,IACZC,kBAAkB,OAClBC,UAAU,yBACVC,aAAc,CAAC,EACfC,aAAa,MAIrB,C,qECjBaC,E,OAAgBhB,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iG,uGCA9Be,EAAgBjB,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6HAQ1BgB,EAAiBlB,EAAAA,GAAAA,IAAUmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,kD,4ICFlCkB,GAAaC,EAAAA,EAAAA,OAAK,kBAAM,4BAA0C,IAClEC,GAAaD,EAAAA,EAAAA,OAAK,kBAAM,4BAA0C,IAEzD,SAASE,IACtB,IAAAC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAjCG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA8BJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,IAE1BG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQZ,EAAaa,IAAI,SAC1BD,IAELF,GAAW,IACXI,EAAAA,EAAAA,IAAgBF,GACbG,KAAKT,GACLU,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,EAAEG,QAAQ,IACjCC,SAAQ,kBAAMX,GAAW,EAAM,IACpC,GAAG,CAACV,IAMJ,OACExB,EAAAA,EAAAA,KAACY,EAAAA,EAAa,CAAAX,UACZ6C,EAAAA,EAAAA,MAACjC,EAAAA,EAAa,CAAAZ,SAAA,EACZD,EAAAA,EAAAA,KAACkB,EAAU,CAAC6B,aAPG,SAAAC,GACnBvB,EAAgB,CAAEuB,MAAAA,GACpB,IAMOnB,EAAOoB,QAASjD,EAAAA,EAAAA,KAACgB,EAAU,CAACa,OAAQA,IAAa,KACjDI,IAAWjC,EAAAA,EAAAA,KAACD,EAAAA,EAAM,QAI3B,C,2JCvCMmD,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIP,SAASC,IACd,OAAON,EAASb,IAAI,qBAAqBE,MAAK,SAAAkB,GAAO,OAAAA,EAAJC,KAAgBC,OAAO,GAC1E,CAEO,SAASrB,EAAgBsB,GAC9B,OAAOV,EACJb,IAAI,sBAADwB,OAAuBD,IAC1BrB,MAAK,SAAAuB,GAAO,OAAAA,EAAJJ,KAAgBC,OAAO,GACpC,CAEO,SAASI,EAAaC,GAC3B,OAAOd,EAASb,IAAI,SAADwB,OAAUG,IAAMzB,MAAK,SAAA0B,GAAO,OAAAA,EAAJP,IAAe,GAC5D,CAEO,SAASQ,EAAaF,GAC3B,OAAOd,EAASb,IAAI,SAADwB,OAAUG,EAAE,aAAYzB,MAAK,SAAA4B,GAAO,OAAAA,EAAJT,KAAgBU,IAAI,GACzE,CAEO,SAASC,EAAgBL,GAC9B,OAAOd,EAASb,IAAI,SAADwB,OAAUG,EAAE,aAAYzB,MAAK,SAAA+B,GAAO,OAAAA,EAAJZ,KAAgBC,OAAO,GAC5E,C","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Shared/Section/Section.styled.js","components/Shared/Wrapper/Wrapper.styled.js","components/pages/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderStyled = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  top: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.7);\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderStyled } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderStyled>\n      <RotatingLines\n        visible={true}\n        height=\"96\"\n        width=\"96\"\n        color=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        ariaLabel=\"rotating-lines-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n      />\n    </LoaderStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SectionStyled = styled.section`\n  padding: 120px 30px;\n  width: 100%;\n  height: 100vh;\n  background-color: #191818;\n`;\n","import styled from 'styled-components';\n\nexport const WrapperStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 40px;\n`;\n\nexport const MovieImgStyled = styled.img`\n  width: 300px;\n  border-radius: 12px;\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { lazy, useEffect, useState } from 'react';\nimport { getMoviesByName } from 'services/api';\n\nimport { SectionStyled } from 'components/Shared/Section/Section.styled';\nimport { WrapperStyled } from 'components/Shared/Wrapper/Wrapper.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MoviesList = lazy(() => import('components/MoviesList/MoviesList'));\nconst SearchForm = lazy(() => import('components/SearchForm/SearchForm'));\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const movie = searchParams.get('query');\n    if (!movie) return;\n\n    setLoading(true);\n    getMoviesByName(movie)\n      .then(setMovies)\n      .catch(e => console.log(e.message))\n      .finally(() => setLoading(false));\n  }, [searchParams]);\n\n  const onFormSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <SectionStyled>\n      <WrapperStyled>\n        <SearchForm onFormSubmit={onFormSubmit} />\n        {movies.length ? <MoviesList movies={movies} /> : null}\n        {loading && <Loader />}\n      </WrapperStyled>\n    </SectionStyled>\n  );\n}\n","import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'f26b3adbc85d2ddd2a653c090353d688',\n    language: 'en-US',\n  },\n});\n\nexport function getTrendingMovies() {\n  return instance.get('trending/all/week').then(({ data }) => data.results);\n}\n\nexport function getMoviesByName(name) {\n  return instance\n    .get(`search/movie?query=${name}`)\n    .then(({ data }) => data.results);\n}\n\nexport function getMovieByID(id) {\n  return instance.get(`movie/${id}`).then(({ data }) => data);\n}\n\nexport function getMovieCast(id) {\n  return instance.get(`movie/${id}/credits`).then(({ data }) => data.cast);\n}\n\nexport function getMovieReviews(id) {\n  return instance.get(`movie/${id}/reviews`).then(({ data }) => data.results);\n}\n"],"names":["LoaderStyled","styled","_templateObject","_taggedTemplateLiteral","Loader","_jsx","children","RotatingLines","visible","height","width","color","strokeWidth","animationDuration","ariaLabel","wrapperStyle","wrapperClass","SectionStyled","WrapperStyled","MovieImgStyled","_templateObject2","MoviesList","lazy","SearchForm","Movies","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","movies","setMovies","_useState3","_useState4","loading","setLoading","useEffect","movie","get","getMoviesByName","then","catch","e","console","log","message","finally","_jsxs","onFormSubmit","query","length","instance","axios","baseURL","params","api_key","language","getTrendingMovies","_ref","data","results","name","concat","_ref2","getMovieByID","id","_ref3","getMovieCast","_ref4","cast","getMovieReviews","_ref5"],"sourceRoot":""}